<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.cjh</groupId>
  <artifactId>test</artifactId>
  <version>1.0.0</version>
  <packaging>war</packaging>
  
  <!-- S : 중복되는 내용 작성 ==> 하단 ${} 이부분으로 사용 -->
  <properties>
  	<org.springframework.version>4.3.4.RELEASE</org.springframework.version>
  </properties>
  <!-- E : 중복되는 내용 작성 ==> 하단 ${} 이부분으로 사용 -->
  
  <dependencies>
  	<!-- S : 스프링 web mvc 프레임웍 jar -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-webmvc</artifactId>
	    <version>${org.springframework.version}</version>
	</dependency>
	<!-- E : 스프링 web mvc 프레임웍 jar -->
	
	<!-- S : logback jar -->
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>1.0.13</version>
	</dependency>
	<!-- E : logback jar -->
	
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.12</version>
		<scope>test</scope>
	</dependency>	
	
	<!-- S : 스프링 mvc 단위테스트 -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-test</artifactId>
	    <version>${org.springframework.version}</version>
	</dependency>	
	<!-- E : 스프링 mvc 단위테스트 -->
	
	<!-- S : h2database(데이터베이스, 이걸로 테이블 만들어서 사용) -->
	<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
		<version>1.4.179</version>
	</dependency>
	<!-- E : h2database(데이터베이스, 이걸로 테이블 만들어서 사용) -->
	
	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>1.2.2</version>
	</dependency>
	
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-jdbc</artifactId>
	    <version>${org.springframework.version}</version>
	</dependency>	
	
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>5.1.1.Final</version>
	</dependency>
	
	<dependency>
		<groupId>javax.el</groupId>
		<artifactId>javax.el-api</artifactId>
		<version>2.2.4</version>
	</dependency>
	
	<dependency>
		<groupId>org.glassfish.web</groupId>
		<artifactId>javax.el</artifactId>
		<version>2.2.4</version>
	</dependency>
	
	<!-- Servlet -->
	<dependency>
		<groupId>org.apache.tomcat</groupId>
		<artifactId>tomcat-servlet-api</artifactId>
		<version>7.0.30</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.servlet.jsp</groupId>
		<artifactId>jsp-api</artifactId>
		<version>2.1</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.servlet.jsp.jstl</groupId>
		<artifactId>jstl-api</artifactId>
		<version>1.2</version>
		<exclusions>
			<exclusion>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.glassfish.web</groupId>
		<artifactId>jstl-impl</artifactId>
		<version>1.2</version>
		<exclusions>
			<exclusion>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	
	<!-- test 할때 test 객체를 만들어주는 jar  -->	
	<dependency>
		<groupId>org.mockito</groupId>
		<artifactId>mockito-core</artifactId>
		<version>1.9.5</version>
		<scope>test</scope>
	</dependency>
  		
	<!-- S : mybatis -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis</artifactId>
	    <version>3.4.1</version>
	</dependency>	
	<!-- E : mybatis -->
	
	<!-- S : mybatis와 스프링프레임웍 연동 -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis-spring</artifactId>
	    <version>1.3.0</version>
	</dependency>
	<!-- E : mybatis와 스프링프레임웍 연동 -->
	
	<!-- Logging -->
	<dependency>
		<groupId>org.apache.logging.log4j</groupId>
		<artifactId>log4j-core</artifactId>
		<version>2.0</version>		
	</dependency>
  </dependencies>
  
  <build>
  	<finalName>test</finalName>
  	
  	<!-- resource 파일 경로 설정 : 안하면 default로 src/main/resource로 설정되어있음(Effective POM에 설정되어있음)
  	<resources>
  		<resource>
  			<directory>test/src/main/resources</directory>// 기본 resource 경로 설정
  		</resource>
  		<resource>
  			<directory>test/src/main/java</directory>// 추가 resource 경로 설정
  			<excludes>
  				<exclude>**/*.java</exclude>// 확장자가 java인것은 제외
  			</excludes>
  		</resource>
  	</resources> -->
  	
  	<plugins>
  		<!-- S : src/main/webapp 까지 들어가는것을 webapp 1depth로 사용하기 위해 -->
  		<plugin>
  			<artifactId>maven-war-plugin</artifactId>
  			<version>2.4</version>
  			<configuration>
  				<warSourceDirectory>webapp</warSourceDirectory>
  			</configuration>
  		</plugin>
  		<!-- E : src/main/webapp 까지 들어가는것을 webapp 1depth로 사용하기 위해 -->
  		
  		<!-- S : 톰켓같은 wtp서버를 사용하기 위해 -->
  		<plugin>
  			<artifactId>maven-eclipse-plugin</artifactId>
  			<version>2.9</version>
  			<configuration>
  				<downloadSources>true</downloadSources>
  				<wtpversion>2.0</wtpversion>
  				<wtpContextName>/</wtpContextName><!-- root path 정하는것(ex : /home 이면 http://localhost:8080/home/index.jsp -->
  			</configuration>
  		</plugin>
  		<!-- E : 톰켓같은 wtp서버를 사용하기 위해 -->
  		
  		<!-- S : 자바컴파일 버젼 설정하기 위해 -->
  		<plugin>
  			<groupId>org.pache.maven.plugins</groupId>
  			<artifactId>maven-compiler-plugin</artifactId>
  			<version>3.1</version>
  			<configuration>
  				<source>1.8</source>
  				<target>1.8</target>
  				<encoding>utf-8</encoding>
  			</configuration>
  		</plugin>
  		<!-- E : 자바컴파일 버젼 설정하기 위해 -->
  	</plugins>
  </build>
  
</project>